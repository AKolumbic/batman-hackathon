!function(e){var t={};function r(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(s,a,function(t){return e[t]}.bind(null,a));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t){const{Scene:r}=Phaser;let s,a,n;e.exports=class extends r{constructor(){super({key:"MainGameScene"})}preload(){this.load.image("background","./assets/imgs/background.png"),this.load.image("foreground","./assets/imgs/foreground.png"),this.load.image("void","./assets/imgs/Solid_black.png"),this.load.image("ground","./assets/imgs/platform.png"),this.load.spritesheet("stand","./assets/imgs/stand2.png",{frameWidth:41.8,frameHeight:55}),this.load.spritesheet("run-left","./assets/imgs/run-left.png",{frameWidth:57,frameHeight:50}),this.load.spritesheet("run-right","./assets/imgs/run-right.png",{frameWidth:57,frameHeight:50}),this.load.spritesheet("jump","./assets/imgs/jump.png",{frameWidth:57,frameHeight:50}),this.load.spritesheet("jump-left","./assets/imgs/jump-left.png",{frameWidth:57,frameHeight:50}),this.load.spritesheet("crouch","./assets/imgs/crouch.png",{frameWidth:57,frameHeight:50}),this.load.spritesheet("punch","./assets/imgs/punch.png",{frameWidth:52,frameHeight:50}),this.load.spritesheet("punch-left","./assets/imgs/punch-left.png",{frameWidth:52,frameHeight:50})}create(){this.add.image(1411,150,"background"),this.add.image(1411,490,"foreground"),(s=this.physics.add.sprite(100,450,"stand").setScale(1.15)).setCollideWorldBounds(!0),s.body.setGravityY(200),this.anims.create({key:"left",frames:this.anims.generateFrameNumbers("run-left",{start:0,end:18}),frameRate:10,repeat:-1}),this.anims.create({key:"stand",frames:this.anims.generateFrameNumbers("stand",{start:0,end:16}),frameRate:5}),this.anims.create({key:"right",frames:this.anims.generateFrameNumbers("run-right",{start:0,end:18}),frameRate:10,repeat:-1}),this.anims.create({key:"up",frames:this.anims.generateFrameNumbers("jump",{start:0,end:2}),frameRate:1,repeat:-1}),this.anims.create({key:"up-left",frames:this.anims.generateFrameNumbers("jump-left",{start:0,end:2}),frameRate:1,repeat:-1}),this.anims.create({key:"punch",frames:this.anims.generateFrameNumbers("punch",{start:0,end:10}),frameRate:10,repeat:-1}),this.anims.create({key:"punch-left",frames:this.anims.generateFrameNumbers("punch-left",{start:0,end:10}),frameRate:10,repeat:-1}),n=this.input.keyboard.createCursorKeys(),(a=this.physics.add.staticGroup()).create(300,1120,"ground").setScale(15).refreshBody(),a.create(200,440,"ground").setScale(.25).refreshBody(),a.create(300,410,"ground").setScale(.25).refreshBody(),a.create(400,410,"ground").setScale(.25).refreshBody(),a.create(450,410,"ground").setScale(.25).refreshBody(),a.create(500,410,"ground").setScale(.25).refreshBody(),a.create(700,300,"ground").setScale(.25).refreshBody(),a.create(750,300,"ground").setScale(.25).refreshBody(),a.create(800,300,"ground").setScale(.25).refreshBody(),a.create(850,300,"ground").setScale(.25).refreshBody(),a.create(900,300,"ground").setScale(.25).refreshBody(),a.create(1090,150,"ground").setScale(.25).refreshBody(),a.create(1275,300,"ground").setScale(.25).refreshBody(),a.create(1325,300,"ground").setScale(.25).refreshBody(),a.create(1375,300,"ground").setScale(.25).refreshBody(),a.create(1425,300,"ground").setScale(.25).refreshBody(),a.create(1475,300,"ground").setScale(.25).refreshBody(),a.create(1275,300,"ground").setScale(.25).refreshBody(),a.create(1325,300,"ground").setScale(.25).refreshBody(),a.create(1375,300,"ground").setScale(.25).refreshBody(),a.create(1425,300,"ground").setScale(.25).refreshBody(),a.create(1475,300,"ground").setScale(.25).refreshBody(),this.physics.add.collider(s,a),this.physics.world.bounds.width=2822,this.cameras.main.setBounds(0,0,2822,384),this.cameras.main.startFollow(s)}update(){n.left.isDown?(s.setVelocityX(-160),s.anims.play("left",!0)):n.right.isDown?(s.setVelocityX(160),s.anims.play("right",!0)):n.space.isDown?(n.left.isDown&&s.anims.play("punch-left",!0),s.anims.play("punch",!0)):(s.setVelocityX(0),s.anims.play("stand",!0)),n.up.isDown&&(s.anims.play("up",!0),s.body.touching.down&&s.setVelocityY(-400)),s.body.touching.down||(s.anims.play("up",!0),n.left.isDown&&s.anims.play("up-left",!0)),n.up.isDown&&n.left.isDown&&s.anims.play("up-left",!0)}}},function(e,t){const{Scene:r}=Phaser;e.exports=class extends r{constructor(){super({key:"GameMenu"})}preload(){this.load.image("gameMenu","../assets/imgs/menuimage.jpg")}create(){this.button=this.add.sprite(400,300,"gameMenu").setInteractive(),this.button.on("pointerdown",()=>{this.scene.start("MainGameScene")})}update(){}}},function(e,t,r){const s=r(1),a=r(0);var n={type:Phaser.AUTO,width:800,height:600,physics:{default:"arcade",arcade:{gravity:{y:300},debug:!1}},scene:[s,a]};new Phaser.Game(n)}]);
//# sourceMappingURL=index.js.map